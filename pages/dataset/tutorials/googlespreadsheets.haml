- @page_title = "The Miso Project :: Dataset :: Tutorials"
- @layout = "dataset"

%article.dataset
  %section.tutorial
    %h2 Datasets from Google Spreadsheets
    %p
      Dataset comes with a set of basic importers and parsers that make it easier to import data
      from a variety of sources, local and remote. As a convenience, one of these sets deals 
      exclusively with Google Spreadsheets. 
    %div.indent-1
      %h3 Requirements
      %p
        In order for Dataset to retrieve the data, several things are required:
        %ul
          %li
            The spreadsheet must be published (visible publicly.)
          %li
            You need the key from the url.
          %li
            If the worksheet you're importing is not the first one, you will also need the index
            of that worksheet.
      
      %h3 Parameters:
      %p
        In order to connect to a google spreadsheet the following properties need to be set on your
        Dataset options:
        %ul
          %li <code>importer</code> : <code>Miso.Dataset.Importers.GoogleSpreadsheet</code>
          %li <code>parser</code> :<code> Miso.Dataset.Parsers.GoogleSpreadsheet</code>
          %li <code>key</code> : <code>"yourGoogleSpreadsheetKey"</code>
          %li <code>worksheet</code> : <code>"1"</code> (optional - fetches 1 by default.) 
      %p
        For example we are going to fetch this spreadsheet:
        %a{ :href => "https://docs.google.com/a/guardian.co.uk/spreadsheet/ccc?key=0Asnl0xYK7V16dFpFVmZUUy1taXdFbUJGdGtVdFBXbFE#gid=0" }
          https://docs.google.com/a/guardian.co.uk/spreadsheet/ccc?key=0Asnl0xYK7V16dFpFVmZUUy1taXdFbUJGdGtVdFBXbFE#gid=0
        = toRunnableCodeBlock("dataset/creation/importingGoogleSpreadsheet")

      %h3 Fast Importing
      %p
        By default, the format of the raw data is rather cumbersome. Additionally, the file containing your data may be quite large (even though your data isn't). There are now two different parsers built into Dataset that handle google spreadsheets, one of which is much faster, but does not support utf-8 properly. This is a due to google not properly escaping the data when creating the output json. By default we use the more robust parser, but if your dataset is large or you want to try the faster parser, set <code>fast:true</code> during dataset initialization.
      %p
        Fast importing also supports name sheets, so instead of setting <code>worksheet</code> to the index of the sheet you want, you can set <code>sheetName</code> to the name of the sheet. Note this only works with the fast parser.
      %p
        %b If it's so unreliable why would I use it?
        %br
        It's not that unreliable. If your data is fairly standard (numeric/string etc.), it will be fine. The only time this becomes an issue is when you start introducing utf-16 characters into your data or having escaped strings. If google resolves their escaping issues, we'll be sure to update Dataset to use this parser by default.
        
      %h3 Use Google Spreadsheets a Lot?
      %p
        Drag this button to your toolbar and anytime you're viewing a google spreadsheet that is publicly published,
        just click it to grab some code to get you started!
      %p
        %div{ :style => 'width:100%; display:inline-block;' }
          %div.download{ :style => 'width:100%;'}
            <a class="button" title="Miso.Dataset This Spread" href='javascript:var theDiv=document.createElement("div"),key=null,worksheet=0; theDiv.id="miso.dataset.bookmarklet"; theLogo=document.createElement("img"); theLogo.src="http://misoproject.com/images/logo.png"; theLogo.width="220"; theBr=document.createElement("br"); theDiv.appendChild(theLogo); theDiv.appendChild(theBr); var topscroll = 10; if (typeof window.pageYOffset !== "undefined"){ topscroll = window.pageYOffset + 10; } var text; if (!(/google\.com/.test(location.href)) && !(/spreadsheet/.test(location.href))) {text="You can only use this on a google spreadsheet!"; } else {if (/key=([A-Za-z0-9]+)[&|#]:?/.test(location.href)){key = /key=([A-Za-z0-9]+)[&|#]:?/.exec(location.href)[1];} if (/gid=([0-9]+)/.test(location.href)){worksheet = 1+(+/gid=([0-9]+)/.exec(location.href)[1]);} theDiv.appendChild(document.createTextNode("Use the following code to access this spreadsheet! (Note it must be published.)")); text="var ds = new Miso.Dataset({\n"+ "  key : \"" + key + "\",\n" + "  worksheet : \"" + worksheet + "\",\n" + "  importer: Miso.Dataset.Importers.GoogleSpreadsheet,\n"+ "  parser : Miso.Dataset.Parsers.GoogleSpreadsheet\n"+ "});\n"+ "ds.fetch({\n"+ "  success : function() {\n"+ "    // your success callback here!\n"+ "  },\n"+ "  error : function() {\n"+ "    // your error callback here!\n"+ "  }\n"+ "});"; } var thePre=document.createElement("pre"); thePre.appendChild(document.createTextNode(text)); theDiv.appendChild(thePre); console.log(top); theDiv.style.position="absolute";theDiv.style.left="10px";theDiv.style.top=topscroll+"px";theDiv.style["z-index"]=1000; theDiv.style["background-color"]="white"; theDiv.style.padding="20px"; theDiv.style.border="solid 2px black"; var theClose=document.createElement("a"); theClose.href="#"; theClose.appendChild(document.createTextNode("Close")); theClose.onclick=function() { document.body.removeChild(document.getElementById("miso.dataset.bookmarklet")); }; theDiv.appendChild(theClose); document.body.appendChild(theDiv); void(0);'>Spreadsheet &rarr; Dataset</a>
      %p 
        The following dialog should appear in your window when you click the bookmarklet on a google spreadsheet.
      %p 
        %img{ :src => '/images/bookmarklet.gif' }

    %a{ :href => '/dataset/tutorials/quickstart', :style => 'float:left;' }
      %h2
        &laquo; Quick Start

    %a{ :href => '/dataset/tutorials/creating', :style => 'float:right;' }
      %h2
        Creating a Dataset &raquo;
